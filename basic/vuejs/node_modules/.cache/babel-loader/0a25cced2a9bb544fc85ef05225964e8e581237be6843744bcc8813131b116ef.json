{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport RandomCafeButton from \"@/components/RandomCafeButton.vue\";\nimport CafeComponent from \"@/components/CafeComponent.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Cafes-Component\",\n  components: {\n    CafeComponent,\n    RandomCafeButton\n  },\n  /*  data() {\n       return ((axios.get('http://localhost:8080/api')).then(v=> {\n         return {cafes: (JSON.parse(v.data)).data}\n       }))\n      // setTimeout(()=>return( {cafes:a}),1000)\n      }*/\n  data() {\n    return {\n      cafes: [],\n      feedbacksCount: new Map([[1, 111], [2, 222], [3, 333], [4, 444]])\n    };\n  },\n  mounted: async function () {\n    try {\n      const res = JSON.parse((await axios.get('http://localhost:8080/api', {\n        /*mode:'cors',*/\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })).data).data;\n      res.forEach(e => {\n        e['show'] = true;\n        e['feedbacksCount'] = this.feedbacksCount.get(e.id) || 0;\n        e['feedbacks'] = ['Хорошее кафе1', 'Хорошее кафе2', 'Хорошее кафе3'];\n      });\n      this.cafes.push(...res);\n      // this.cafes.map(v => v['feedbacks'] = this.feedbacks.get(v.id) || 0)\n      // console.log(this.cafes)\n    } catch (e) {\n      alert(JSON.stringify(e));\n    }\n  },\n  methods: {\n    getFeedbacks(id) {\n      // alert(CafeComponent.data().cafes)\n      alert(JSON.stringify(this));\n      // alert()\n      // const arrId=this.cafes.find(v=>v.id==id);\n      // this.cafes[arrId].feedbacks=['Not bad', 'Good!']\n    },\n\n    randomCafe() {\n      const id = Math.round(Math.random() * (this.cafes.length - 1));\n      console.log(id);\n      this.cafes.map((v, i) => {\n        i != id ? v.show = false : v.show = true;\n      });\n      console.log(this.cafes);\n    }\n  }\n};","map":{"version":3,"names":["RandomCafeButton","CafeComponent","axios","name","components","data","cafes","feedbacksCount","Map","mounted","res","JSON","parse","get","headers","Accept","forEach","e","id","push","alert","stringify","methods","getFeedbacks","randomCafe","Math","round","random","length","console","log","map","v","i","show"],"sources":["/home/oem/PhpstormProjects/Yii2Vue/basic/vuejs/src/components/CafesComponent.vue"],"sourcesContent":["<script>\n\nimport RandomCafeButton from \"@/components/RandomCafeButton.vue\";\nimport CafeComponent from \"@/components/CafeComponent.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"Cafes-Component\",\n  components: {CafeComponent, RandomCafeButton},\n  /*  data() {\n       return ((axios.get('http://localhost:8080/api')).then(v=> {\n         return {cafes: (JSON.parse(v.data)).data}\n       }))\n      // setTimeout(()=>return( {cafes:a}),1000)\n\n\n    }*/\n  data() {\n    return {\n      cafes: [],\n      feedbacksCount: new Map([[1, 111], [2, 222], [3, 333], [4, 444]])\n    }\n  },\n  mounted: async function () {\n    try {\n      const res = (JSON.parse((await axios.get('http://localhost:8080/api',\n          {/*mode:'cors',*/\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }}\n      )).data)).data\n      res.forEach(e => {\n        e['show'] = true;\n        e['feedbacksCount'] = this.feedbacksCount.get(e.id) || 0\n        e['feedbacks'] = ['Хорошее кафе1', 'Хорошее кафе2', 'Хорошее кафе3']\n\n      })\n      this.cafes.push(...res)\n      // this.cafes.map(v => v['feedbacks'] = this.feedbacks.get(v.id) || 0)\n      // console.log(this.cafes)\n    } catch (e){alert(JSON.stringify(e))}\n  },\n\n\n  methods: {\n    getFeedbacks(id) {\n      // alert(CafeComponent.data().cafes)\n      alert(JSON.stringify(this))\n      // alert()\n      // const arrId=this.cafes.find(v=>v.id==id);\n      // this.cafes[arrId].feedbacks=['Not bad', 'Good!']\n    }\n    ,\n    randomCafe() {\n      const id = Math.round(Math.random() * (this.cafes.length - 1))\n      console.log(id)\n      this.cafes.map((v, i) => {\n        i != id ? v.show = false : v.show = true\n      })\n      console.log(this.cafes)\n\n    }\n    ,\n\n  }\n}\n\n</script>\n\n<template>\n  <div class=\".tc-cafes-wrapper\">\n    <random-cafe-button @click=\"randomCafe\"/>\n    <div class=\"tc-cafes\">\n      <cafe-component v-for=\"(cafe, index) in cafes\" :key=\"index\" :cafe=\"cafe\"/>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.tc-cafes-wrapper {\n  margin: 10px 25% 10px 25%;\n}\n\n</style>"],"mappings":";AAEA,OAAOA,gBAAe,MAAO,mCAAmC;AAChE,OAAOC,aAAY,MAAO,gCAAgC;AAC1D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IAACH,aAAa;IAAED;EAAgB,CAAC;EAC7C;;;;;;EAQAK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAClE;EACF,CAAC;EACDC,OAAO,EAAE,eAAAA,CAAA,EAAkB;IACzB,IAAI;MACF,MAAMC,GAAE,GAAKC,IAAI,CAACC,KAAK,CAAC,CAAC,MAAMV,KAAK,CAACW,GAAG,CAAC,2BAA2B,EAChE;QAAC;QACCC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB;MAAC,CACP,CAAC,EAAEV,IAAI,CAAC,CAAEA,IAAG;MACbK,GAAG,CAACM,OAAO,CAACC,CAAA,IAAK;QACfA,CAAC,CAAC,MAAM,IAAI,IAAI;QAChBA,CAAC,CAAC,gBAAgB,IAAI,IAAI,CAACV,cAAc,CAACM,GAAG,CAACI,CAAC,CAACC,EAAE,KAAK;QACvDD,CAAC,CAAC,WAAW,IAAI,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe;MAErE,CAAC;MACD,IAAI,CAACX,KAAK,CAACa,IAAI,CAAC,GAAGT,GAAG;MACtB;MACA;IACF,EAAE,OAAOO,CAAC,EAAC;MAACG,KAAK,CAACT,IAAI,CAACU,SAAS,CAACJ,CAAC,CAAC,CAAC;IAAA;EACtC,CAAC;EAGDK,OAAO,EAAE;IACPC,YAAYA,CAACL,EAAE,EAAE;MACf;MACAE,KAAK,CAACT,IAAI,CAACU,SAAS,CAAC,IAAI,CAAC;MAC1B;MACA;MACA;IACF;;IAEAG,UAAUA,CAAA,EAAG;MACX,MAAMN,EAAC,GAAIO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,KAAK,IAAI,CAACrB,KAAK,CAACsB,MAAK,GAAI,CAAC,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAACZ,EAAE;MACd,IAAI,CAACZ,KAAK,CAACyB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACvBA,CAAA,IAAKf,EAAC,GAAIc,CAAC,CAACE,IAAG,GAAI,KAAI,GAAIF,CAAC,CAACE,IAAG,GAAI,IAAG;MACzC,CAAC;MACDL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,KAAK;IAExB;EAGF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}