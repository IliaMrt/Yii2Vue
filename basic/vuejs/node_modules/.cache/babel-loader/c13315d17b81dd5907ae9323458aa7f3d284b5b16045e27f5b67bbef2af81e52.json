{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport RandomCafeButton from \"@/components/RandomCafeButton.vue\";\nimport CafeComponent from \"@/components/CafeComponent.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Cafes-Component\",\n  components: {\n    CafeComponent,\n    RandomCafeButton\n  },\n  /*  data() {\n       return ((axios.get('http://localhost:8080/api')).then(v=> {\n         return {cafes: (JSON.parse(v.data)).data}\n       }))\n      // setTimeout(()=>return( {cafes:a}),1000)\n      }*/\n  data() {\n    return {\n      cafes: [],\n      feedbacksCount: new Map([[1, 111], [2, 222], [3, 333], [4, 444]])\n    };\n  },\n  mounted: async function () {\n    const res = JSON.parse((await axios.get('http://localhost:8080/api')).data).data;\n    res.forEach(e => {\n      e['show'] = true;\n      e['feedbacksCount'] = this.feedbacksCount.get(e.id) || 0;\n      e['feedbacks'] = ['Хорошее кафе1', 'Хорошее кафе2', 'Хорошее кафе3'];\n    });\n    this.cafes.push(...res);\n    // this.cafes.map(v => v['feedbacks'] = this.feedbacks.get(v.id) || 0)\n    // console.log(this.cafes)\n  },\n\n  methods: {\n    randomCafe1() {\n      const id = Math.round(Math.random() * (this.cafes.length - 1));\n      console.log(id);\n      this.cafes.map((v, i) => {\n        i != id ? v.show = false : v.show = true;\n      });\n      console.log(this.cafes);\n    },\n    getFeedbacks() {\n      this.cafes.map((v, i) => {\n        v.show = true;\n      });\n      console.log(this.cafes);\n      // alert(id)\n      // alert()\n      // const arrId=this.cafes.find(v=>v.id==id);\n      // this.cafes[arrId].feedbacks=['Not bad', 'Good!']\n    }\n  }\n};\n/*async mounted{\n  console.log({cafes: (JSON.parse((await axios.get('http://localhost:8080/api')).data)).data})\n}*/\n// const a\n// (axios.get('http://localhost:8080/api')).then(v=>a=v)\n// return {cafes: (JSON.parse((await axios.get('http://localhost:8080/api')).data)).data})\n/*    setTimeout(()=>\n       console.log {cafes: a},\n         1000)*/\n// return {cafes:[{name:'aaa', landmark: 'vvv'}]};\n\n// data() {\n// return new Promise(()=>({cafes: (JSON.parse((axios.get('http://localhost:8080/api')).data)).data}))\n// let b\n// let a=(axios.get('http://localhost:8080/api')).then(c=>b=c)\n// // a=(JSON.parse((axios.get('http://localhost:8080/api')).data)).data\n// console.log(a)\n// console.log(b)\n// setTimeout(()=>(axios.get('http://localhost:8080/api')).then(f=> return f)),1000)\n// }\n/*\n  data() {\n    return {\n      cafes: [\n        {\n          title: '1sunt aut facere repellat',\n          body: 'uia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto'\n        },\n        {\n          title: 'qui est esse',\n          body: 'est rerum tempore vitae<br>nsequi sint nihil reprehenderit dolor beatae ea dolores neque <br>fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis<br>qui aperiam non debitis possimus qui neque nisi nulla'\n        },\n        {\n          title: 'nesciunt quas odio',\n          body: 'repudiandae veniam quaerat sunt sed alias aut fugiat sit autem sed est'\n        },\n        {\n          title: 'This is a demo note',\n          body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi corrupti officiis alias tenetur, tenetur iste maxime laudantium?'\n        },\n        {\n          title: 'qui est esse',\n          body: 'est rerum tempore vitae<br>nsequi sint nihil reprehenderit dolor beatae ea dolores neque <br>fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis<br>qui aperiam non debitis possimus qui neque nisi nulla'\n        },\n      ]\n    }\n  },\n*/\n/*methods:{\n  deleteNote(note){\n    this.notes.splice(this.notes.indexOf(note),1)\n  },\n  async addNote(){\n// this.notes.unshift({title: '',body: ''})\n\n    this.notes.unshift((await axios.get('http://localhost:8080/api')).data)\n  }\n}*/","map":{"version":3,"names":["RandomCafeButton","CafeComponent","axios","name","components","data","cafes","feedbacksCount","Map","mounted","res","JSON","parse","get","forEach","e","id","push","methods","randomCafe1","Math","round","random","length","console","log","map","v","i","show","getFeedbacks"],"sources":["/home/oem/PhpstormProjects/Yii2Vue/basic/vuejs/src/components/CafesComponent.vue"],"sourcesContent":["<script>\n\nimport RandomCafeButton from \"@/components/RandomCafeButton.vue\";\nimport CafeComponent from \"@/components/CafeComponent.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"Cafes-Component\",\n  components: {CafeComponent, RandomCafeButton},\n  /*  data() {\n       return ((axios.get('http://localhost:8080/api')).then(v=> {\n         return {cafes: (JSON.parse(v.data)).data}\n       }))\n      // setTimeout(()=>return( {cafes:a}),1000)\n\n\n    }*/\n  data() {\n    return {\n      cafes: [],\n      feedbacksCount: new Map([[1, 111], [2, 222], [3, 333], [4, 444]])\n    }\n  },\n  mounted: async function () {\n    const res = (JSON.parse((await axios.get('http://localhost:8080/api')).data)).data\n    res.forEach(e => {\n      e['show'] = true;\n      e['feedbacksCount'] = this.feedbacksCount.get(e.id) || 0\n      e['feedbacks'] = ['Хорошее кафе1','Хорошее кафе2','Хорошее кафе3']\n\n    })\n    this.cafes.push(...res)\n    // this.cafes.map(v => v['feedbacks'] = this.feedbacks.get(v.id) || 0)\n    // console.log(this.cafes)\n\n  },\n  methods: {\n    randomCafe1() {\n      const id = Math.round(Math.random() * (this.cafes.length - 1))\n      console.log(id)\n      this.cafes.map((v, i) => {\n        i != id ? v.show = false : v.show = true\n      })\n      console.log(this.cafes)\n\n    },\n    getFeedbacks(){\n      this.cafes.map((v, i) => {\n        v.show = true\n      })\n      console.log(this.cafes)\n      // alert(id)\n      // alert()\n      // const arrId=this.cafes.find(v=>v.id==id);\n      // this.cafes[arrId].feedbacks=['Not bad', 'Good!']\n    }\n  }\n}\n/*async mounted{\n  console.log({cafes: (JSON.parse((await axios.get('http://localhost:8080/api')).data)).data})\n}*/\n// const a\n// (axios.get('http://localhost:8080/api')).then(v=>a=v)\n// return {cafes: (JSON.parse((await axios.get('http://localhost:8080/api')).data)).data})\n/*    setTimeout(()=>\n       console.log {cafes: a},\n         1000)*/\n// return {cafes:[{name:'aaa', landmark: 'vvv'}]};\n\n// data() {\n// return new Promise(()=>({cafes: (JSON.parse((axios.get('http://localhost:8080/api')).data)).data}))\n// let b\n// let a=(axios.get('http://localhost:8080/api')).then(c=>b=c)\n// // a=(JSON.parse((axios.get('http://localhost:8080/api')).data)).data\n// console.log(a)\n// console.log(b)\n// setTimeout(()=>(axios.get('http://localhost:8080/api')).then(f=> return f)),1000)\n// }\n/*\n  data() {\n    return {\n      cafes: [\n        {\n          title: '1sunt aut facere repellat',\n          body: 'uia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto'\n        },\n        {\n          title: 'qui est esse',\n          body: 'est rerum tempore vitae<br>nsequi sint nihil reprehenderit dolor beatae ea dolores neque <br>fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis<br>qui aperiam non debitis possimus qui neque nisi nulla'\n        },\n        {\n          title: 'nesciunt quas odio',\n          body: 'repudiandae veniam quaerat sunt sed alias aut fugiat sit autem sed est'\n        },\n        {\n          title: 'This is a demo note',\n          body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi corrupti officiis alias tenetur, tenetur iste maxime laudantium?'\n        },\n        {\n          title: 'qui est esse',\n          body: 'est rerum tempore vitae<br>nsequi sint nihil reprehenderit dolor beatae ea dolores neque <br>fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis<br>qui aperiam non debitis possimus qui neque nisi nulla'\n        },\n      ]\n    }\n  },\n*/\n/*methods:{\n  deleteNote(note){\n    this.notes.splice(this.notes.indexOf(note),1)\n  },\n  async addNote(){\n// this.notes.unshift({title: '',body: ''})\n\n    this.notes.unshift((await axios.get('http://localhost:8080/api')).data)\n  }\n}*/\n\n</script>\n\n<template>\n  <div class=\".tc-cafes-wrapper\">\n    <random-cafe-button @click=\"randomCafe1\"/>\n    <!--    <random-cafe-button @randomCafe=\"randomCafe\"/>-->\n    <div class=\"tc-cafes\">\n      <cafe-component v-for=\"(cafe, index) in cafes\" :key=\"index\" :cafe=\"cafe\"/>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.tc-cafes-wrapper {\n  background-color: red; //#f0c806;\n\n  .new-cafe-btn {\n\n    width: 200px;\n    display: block;\n    margin: 0 auto 20px;\n    background-color: red; // #FFF;\n    padding: 10px 32px;\n    border: 1px solid #e0e0e0;\n    font-size: 26px;\n    outline: 0;\n    transition: all 0.3s;\n    cursor: pointer;\n    font-family: 'Caveat', cursive;\n\n    &:hover {\n      box-shadow: 0 5px 7px rgba(0, 0, 0, 0.1);\n    }\n\n    &:active {\n      position: relative;\n      top: 1px;\n    }\n  }\n\n  .tc-cafes {\n    background-color: blue; //#f0c806;\n\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: 0 auto;\n\n    .tc-cafe {\n      background-color: black; //#f0c806;\n      border-radius: 8px;\n      width: 280px;\n      margin: 0 10px 20px;\n      box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.2);\n      transition: all 0.5s;\n      cursor: pointer;\n      font-family: 'Caveat', cursive;\n\n      .tc-cafe-header {\n        padding: 10px 16px 0;\n\n        .tc-cafe-close {\n          display: inline-block;\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          line-height: 24px;\n          text-align: center;\n          transition: all 0.3s;\n\n          &:hover {\n            background-color: rgba(0, 0, 0, 0.2);\n          }\n\n          &:focus {\n            box-shadow: inset 2px 3px 0px rgba(0, 0, 0, 0.8);\n          }\n        }\n\n        .tc-cafe-close {\n          float: right;\n        }\n      }\n\n      .tc-cafe-title,\n      .tc-cafe-body {\n        outline: 0;\n      }\n\n      .tc-cafe-title {\n        font-size: 24px;\n        padding: 10px 16px;\n        font-weight: bold;\n      }\n\n      .tc-cafe-body {\n        font-size: 20px;\n        padding: 10px 16px 16px;\n      }\n\n      &:hover {\n        box-shadow: 2px 4px 10px rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n}\n</style>"],"mappings":";AAEA,OAAOA,gBAAe,MAAO,mCAAmC;AAChE,OAAOC,aAAY,MAAO,gCAAgC;AAC1D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IAACH,aAAa;IAAED;EAAgB,CAAC;EAC7C;;;;;;EAQAK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAClE;EACF,CAAC;EACDC,OAAO,EAAE,eAAAA,CAAA,EAAkB;IACzB,MAAMC,GAAE,GAAKC,IAAI,CAACC,KAAK,CAAC,CAAC,MAAMV,KAAK,CAACW,GAAG,CAAC,2BAA2B,CAAC,EAAER,IAAI,CAAC,CAAEA,IAAG;IACjFK,GAAG,CAACI,OAAO,CAACC,CAAA,IAAK;MACfA,CAAC,CAAC,MAAM,IAAI,IAAI;MAChBA,CAAC,CAAC,gBAAgB,IAAI,IAAI,CAACR,cAAc,CAACM,GAAG,CAACE,CAAC,CAACC,EAAE,KAAK;MACvDD,CAAC,CAAC,WAAW,IAAI,CAAC,eAAe,EAAC,eAAe,EAAC,eAAe;IAEnE,CAAC;IACD,IAAI,CAACT,KAAK,CAACW,IAAI,CAAC,GAAGP,GAAG;IACtB;IACA;EAEF,CAAC;;EACDQ,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,MAAMH,EAAC,GAAII,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,KAAK,IAAI,CAAChB,KAAK,CAACiB,MAAK,GAAI,CAAC,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAACT,EAAE;MACd,IAAI,CAACV,KAAK,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACvBA,CAAA,IAAKZ,EAAC,GAAIW,CAAC,CAACE,IAAG,GAAI,KAAI,GAAIF,CAAC,CAACE,IAAG,GAAI,IAAG;MACzC,CAAC;MACDL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,KAAK;IAExB,CAAC;IACDwB,YAAYA,CAAA,EAAE;MACZ,IAAI,CAACxB,KAAK,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACvBD,CAAC,CAACE,IAAG,GAAI,IAAG;MACd,CAAC;MACDL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,KAAK;MACtB;MACA;MACA;MACA;IACF;EACF;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;;;;AAKA;;;;AAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}